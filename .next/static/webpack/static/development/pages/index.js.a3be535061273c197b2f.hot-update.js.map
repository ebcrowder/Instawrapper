{"version":3,"file":"static/webpack/static/development/pages/index.js.a3be535061273c197b2f.hot-update.js","sources":["webpack:///./Instawrap.tsx"],"sourcesContent":["import React, { Fragment, Component } from 'react';\n\nexport default class Instagram extends Component {\n\n    state = {\n      width: this.windowGlobal,\n      photos: []\n    };\n  \n\n  componentDidMount() {\n    // need instagram token\n\n    const res = fetch(\n      `https://api.instagram.com/v1/users/self/media/recent/?access_token=1084132.d703c80.678e50a84eae49918707739832ac003c`\n    )\n      .then(res => res.json())\n      .then(photos =>\n        this.setState({\n          photos: photos.data\n        })\n      );\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    const windowGlobal = typeof window !== 'undefined' && window.innerWidth;\n    this.setState({ width: windowGlobal });\n  };\n\n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 700;\n\n    const { photos } = this.state;\n\n    if (isMobile) {\n      return photos.slice(0, 6).map(photo => (\n        <Fragment key={photo.caption.id}>\n          <a href={photo.link} target=\"_blank\">\n            <img\n              className=\"insta-image\"\n              src={photo.images.standard_resolution.url}\n              alt=\"insta-image\"\n            />\n          </a>\n        </Fragment>\n      ));\n    } else {\n      return photos.slice(0, 8).map(photo => (\n        <Fragment key={photo.caption.id}>\n          <a href={photo.link} target=\"_blank\">\n            <img\n              className=\"insta-image\"\n              src={photo.images.standard_resolution.url}\n              alt=\"insta-image\"\n            />\n          </a>\n        </Fragment>\n      ));\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAoBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAnBA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAEA;AADA;AADA;AAKA;AACA;;;AAOA;AAAA;AAEA;AAFA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;;;;AA3DA;AACA;;;;;A","sourceRoot":""}